apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysqldb
  namespace: messaging-app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysqldb
  template:
    metadata:
      labels:
        app: mysqldb
    spec:
      containers:
      - name: mysqldb
        image: mysql:8.0.36
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret-credentials
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: db-secret-credentials
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db-secret-credentials
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret-credentials
              key: MYSQL_PASSWORD
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/mysql
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: mysqldb-pvc


---

apiVersion: v1
kind: Service
metadata:
  name: mysqldb
  namespace: messaging-app1
spec:
  selector:
    app: mysqldb
  ports:
    - port: 3306         # The port your Django app will connect to
      targetPort: 3306   # Matches containerPort in the Deployment
  type: ClusterIP        # Internal cluster access
